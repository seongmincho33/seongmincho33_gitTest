#include <stdio.h>
/*
게임 캐릭터를 4가지 명령어를 통해 움직이려 합니다.
명령어는 다음과 같습니다.
U: 위쪽으로 한 칸 가기
D: 아래쪽으로 한 칸 가기
R: 오른쪽으로 한 칸 가기
L: 왼쪽으로 한 칸 가기
캐릭터는 좌표평면의 (0, 0) 위치에서 시작합니다.
좌표평면의 경계는 왼쪽 위(-5, 5),
왼쪽 아래(-5, -5), 오른쪽 위(5, 5),
오른쪽 아래(5, -5)로 이루어져 있습니다.
이때, 우리는 게임 캐릭터가 지나간 길 중 캐릭터가
처음 걸어본 길의 위치를 구하려고 합니다.
*/
int solution(int MAP[11][11], char route[])
{
	int x = 5, y = 5, len = 0, i, j;
	for (i = 0; i < 10; i++)
	{
		if (route[i] == 'U')
			y -= 1;
		else if (route[i] == 'D')
			y += 1;
		else if (route[i] == 'R')
			x += 1;
		else if (route[i] == 'L')
			x -= 1;

		if (x < 0)
			x = 0;
		if (y < 0)
			y = 0;
		if (x > 11)
			x = 10;
		if (y > 11)
			y = 10;

		MAP[y][x] = 1;
	}

	for (i = 0; i < 11; i++)
	{
		for (j = 0; j < 11; j++)
		{
			if (MAP[i][j] == 1)
				len++;
			printf("%d ", MAP[i][j]);
		}
		printf("\n");
	}

	return len;
}
int main()
{
	int MAP[11][11] =
	{
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,2,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0},
	};
	//char route[10] = "ULURRDLLU"; //len == 6
	//char route[10] = "LLLLLLLLL"; //len ==5
	char route[10] = "LULLLLLLU"; //len == 7
	int len = solution(MAP, route);
	printf("len : %d\n", len);
	return 0;
}
